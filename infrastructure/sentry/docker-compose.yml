version: '2.3'

services:
  redis:
    restart: on-failure:5
    image: redis:6.0-alpine
    healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 1s
        timeout: 3s
        retries: 30

  postgres:
    restart: on-failure:5
    image: postgres:13-alpine
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sentry"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    environment:
      POSTGRES_USER: sentry
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: sentry
    volumes:
     - ${POSTGRES_DATA_VOLUME}:/var/lib/postgresql/data
  smtp:
    restart: unless-stopped
    # Use this value to have correct SMTP HELO value
    hostname: hertz.phpmyadmin.net
    image: tianon/exim4

  sentry:
    image: sentry:9.1.2
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
     - 9000:9000
    environment:
      SENTRY_SECRET_KEY: "${SENTRY_SECRET_KEY}"
      SENTRY_POSTGRES_HOST: postgres
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: "${POSTGRES_PASSWORD}"
      SENTRY_REDIS_HOST: redis
      SENTRY_FILESTORE_DIR: /data/filestorage
      SENTRY_SERVER_EMAIL: "${SENTRY_SERVER_EMAIL}"
      SENTRY_EMAIL_HOST: smtp
    volumes:
     - ${SENTRY_DATA_VOLUME}:/data

  cron:
    image: sentry:9.1.2
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: "sentry run cron"
    environment:
      SENTRY_SECRET_KEY: "${SENTRY_SECRET_KEY}"
      SENTRY_POSTGRES_HOST: postgres
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: "${POSTGRES_PASSWORD}"
      SENTRY_REDIS_HOST: redis
      SENTRY_FILESTORE_DIR: /data/filestorage
      SENTRY_SERVER_EMAIL: "${SENTRY_SERVER_EMAIL}"
      SENTRY_EMAIL_HOST: smtp
    volumes:
     - ${SENTRY_DATA_VOLUME}:/data

  worker:
    image: sentry:9.1.2
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: "sentry run worker"
    environment:
      SENTRY_SECRET_KEY: "${SENTRY_SECRET_KEY}"
      SENTRY_POSTGRES_HOST: postgres
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: "${POSTGRES_PASSWORD}"
      SENTRY_REDIS_HOST: redis
      SENTRY_FILESTORE_DIR: /data/filestorage
      SENTRY_SERVER_EMAIL: "${SENTRY_SERVER_EMAIL}"
      SENTRY_EMAIL_HOST: smtp
    volumes:
     - ${SENTRY_DATA_VOLUME}:/data
